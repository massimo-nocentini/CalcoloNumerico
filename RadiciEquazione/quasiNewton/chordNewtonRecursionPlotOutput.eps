%!PS-Adobe-2.0 EPSF-2.0
%%Title: chordNewtonRecursionPlotOutput.tex
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri Nov  5 22:24:48 2010
%%DocumentFonts: 
%%BoundingBox: 50 50 434 338
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext true def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (chordNewtonRecursionPlotOutput.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Massimo Nocentini,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Nov  5 22:24:48 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
998 822 M
5952 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
998 822 M
88 0 V
5864 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
998 1573 M
5952 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
998 1573 M
88 0 V
5864 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
998 2323 M
5952 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
998 2323 M
88 0 V
5864 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
998 3074 M
5952 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
998 3074 M
88 0 V
5864 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
998 3825 M
5952 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
998 3825 M
88 0 V
5864 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
998 4576 M
5952 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
998 4576 M
88 0 V
5864 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
998 5327 M
5952 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
998 5327 M
88 0 V
5864 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
998 634 M
0 4693 V
stroke
0.500 UL
LTb
LCb setrgbcolor
998 634 M
0 88 V
0 4605 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1990 634 M
0 4693 V
stroke
0.500 UL
LTb
LCb setrgbcolor
1990 634 M
0 88 V
0 4605 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
2982 634 M
0 4693 V
stroke
0.500 UL
LTb
LCb setrgbcolor
2982 634 M
0 88 V
0 4605 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
3974 634 M
0 4693 V
stroke
0.500 UL
LTb
LCb setrgbcolor
3974 634 M
0 88 V
0 4605 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
4966 634 M
0 4693 V
stroke
0.500 UL
LTb
LCb setrgbcolor
4966 634 M
0 88 V
0 4605 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
5958 634 M
0 4693 V
stroke
0.500 UL
LTb
LCb setrgbcolor
5958 634 M
0 88 V
0 4605 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
6950 634 M
0 4693 V
stroke
0.500 UL
LTb
LCb setrgbcolor
6950 634 M
0 88 V
0 4605 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
998 5327 N
998 634 L
5952 0 V
0 4693 V
-5952 0 V
Z stroke
1.000 UP
0.500 UL
LTb
0.500 UL
LT0
LC0 setrgbcolor
0.00 1.00 1.00 C 998 1498 M
72 9 V
198 31 V
198 35 V
199 40 V
198 45 V
199 51 V
198 56 V
198 63 V
199 69 V
198 75 V
199 81 V
198 89 V
198 95 V
199 103 V
198 111 V
199 118 V
198 126 V
198 134 V
199 143 V
198 151 V
199 160 V
198 170 V
198 178 V
199 188 V
198 198 V
199 208 V
198 218 V
198 229 V
199 239 V
198 250 V
126 166 V
1.000 UP
stroke
LT1
LC1 setrgbcolor
0.00 0.00 1.00 C 6668 4964 Pls
6060 4258 Pls
5579 3768 Pls
5186 3409 Pls
4857 3137 Pls
4577 2925 Pls
4334 2755 Pls
4123 2617 Pls
3936 2502 Pls
3769 2406 Pls
3620 2325 Pls
3485 2255 Pls
3363 2194 Pls
3251 2142 Pls
3149 2095 Pls
3056 2054 Pls
2970 2018 Pls
2890 1985 Pls
2816 1956 Pls
2747 1930 Pls
2683 1906 Pls
2623 1885 Pls
2567 1865 Pls
2515 1847 Pls
2466 1830 Pls
2420 1815 Pls
2376 1801 Pls
2335 1788 Pls
2297 1777 Pls
2260 1765 Pls
2225 1755 Pls
2193 1746 Pls
2162 1737 Pls
2132 1728 Pls
2104 1721 Pls
2078 1713 Pls
2053 1707 Pls
2029 1700 Pls
2006 1694 Pls
1984 1688 Pls
1963 1683 Pls
1944 1678 Pls
1925 1673 Pls
1907 1669 Pls
1889 1664 Pls
1873 1660 Pls
1857 1657 Pls
1842 1653 Pls
1828 1650 Pls
1814 1646 Pls
1801 1643 Pls
1788 1640 Pls
1776 1637 Pls
1764 1635 Pls
1753 1632 Pls
1743 1630 Pls
1732 1628 Pls
1722 1625 Pls
1713 1623 Pls
1704 1621 Pls
1695 1619 Pls
1687 1617 Pls
1679 1616 Pls
1671 1614 Pls
1664 1612 Pls
1657 1611 Pls
1650 1609 Pls
1643 1608 Pls
1637 1607 Pls
1631 1605 Pls
1625 1604 Pls
1619 1603 Pls
1614 1602 Pls
1608 1601 Pls
1603 1600 Pls
1598 1599 Pls
1594 1598 Pls
1589 1597 Pls
1585 1596 Pls
1581 1595 Pls
1577 1594 Pls
1573 1593 Pls
1569 1593 Pls
1565 1592 Pls
1562 1591 Pls
1559 1591 Pls
1555 1590 Pls
1552 1589 Pls
1549 1589 Pls
1546 1588 Pls
1544 1588 Pls
1541 1587 Pls
1538 1587 Pls
1536 1586 Pls
1533 1586 Pls
1531 1585 Pls
1529 1585 Pls
1527 1584 Pls
1525 1584 Pls
1523 1583 Pls
1521 1583 Pls
1519 1583 Pls
1517 1582 Pls
1515 1582 Pls
1514 1582 Pls
1512 1581 Pls
1510 1581 Pls
1509 1581 Pls
1507 1580 Pls
1506 1580 Pls
1505 1580 Pls
1503 1580 Pls
1502 1579 Pls
1501 1579 Pls
1500 1579 Pls
1498 1579 Pls
1497 1579 Pls
1496 1578 Pls
1495 1578 Pls
1494 1578 Pls
1493 1578 Pls
1492 1578 Pls
1492 1577 Pls
1491 1577 Pls
1490 1577 Pls
1489 1577 Pls
1488 1577 Pls
1488 1577 Pls
1487 1576 Pls
1486 1576 Pls
1485 1576 Pls
1485 1576 Pls
1484 1576 Pls
1484 1576 Pls
1483 1576 Pls
1482 1576 Pls
1482 1576 Pls
1481 1575 Pls
1481 1575 Pls
1480 1575 Pls
1480 1575 Pls
1479 1575 Pls
1479 1575 Pls
1479 1575 Pls
1478 1575 Pls
1478 1575 Pls
1477 1575 Pls
1477 1575 Pls
1477 1575 Pls
1476 1574 Pls
1476 1574 Pls
1476 1574 Pls
1475 1574 Pls
1475 1574 Pls
1475 1574 Pls
1474 1574 Pls
1474 1574 Pls
1474 1574 Pls
1474 1574 Pls
1473 1574 Pls
1473 1574 Pls
1473 1574 Pls
1473 1574 Pls
1472 1574 Pls
1472 1574 Pls
1472 1574 Pls
1472 1574 Pls
1472 1574 Pls
1471 1574 Pls
1471 1574 Pls
1471 1574 Pls
1471 1573 Pls
1471 1573 Pls
1471 1573 Pls
1471 1573 Pls
1470 1573 Pls
1470 1573 Pls
1470 1573 Pls
1470 1573 Pls
1470 1573 Pls
1470 1573 Pls
1470 1573 Pls
1470 1573 Pls
1469 1573 Pls
1469 1573 Pls
1469 1573 Pls
1469 1573 Pls
1469 1573 Pls
1469 1573 Pls
1469 1573 Pls
1469 1573 Pls
1469 1573 Pls
1469 1573 Pls
1469 1573 Pls
1468 1573 Pls
1468 1573 Pls
1468 1573 Pls
1468 1573 Pls
1468 1573 Pls
1468 1573 Pls
1468 1573 Pls
1468 1573 Pls
1468 1573 Pls
1468 1573 Pls
1468 1573 Pls
1468 1573 Pls
1468 1573 Pls
1468 1573 Pls
1468 1573 Pls
1468 1573 Pls
1468 1573 Pls
1468 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1467 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
1466 1573 Pls
0.500 UL
LT2
LC2 setrgbcolor
1.00 0.00 0.00 C 6950 3148 M
6668 1573 L
0 3391 V
6060 1573 L
0 2685 V
5579 1573 L
0 2195 V
5186 1573 L
0 1836 V
4857 1573 L
0 1564 V
4577 1573 L
0 1352 V
4334 1573 L
0 1182 V
4123 1573 L
0 1044 V
3936 1573 L
0 929 V
3769 1573 L
0 833 V
3620 1573 L
0 752 V
3485 1573 L
0 682 V
3363 1573 L
0 621 V
3251 1573 L
0 569 V
3149 1573 L
0 522 V
-93 -522 V
0 481 V
-86 -481 V
0 445 V
-80 -445 V
0 412 V
-74 -412 V
0 383 V
-69 -383 V
0 357 V
-64 -357 V
0 333 V
-60 -333 V
0 312 V
-56 -312 V
0 292 V
-52 -292 V
0 274 V
-49 -274 V
0 257 V
-46 -257 V
0 242 V
-44 -242 V
0 228 V
-41 -228 V
0 215 V
-38 -215 V
0 204 V
-37 -204 V
0 192 V
-35 -192 V
0 182 V
-32 -182 V
0 173 V
-31 -173 V
0 164 V
-30 -164 V
0 155 V
-28 -155 V
0 148 V
-26 -148 V
0 140 V
-25 -140 V
0 134 V
-24 -134 V
0 127 V
-23 -127 V
0 121 V
-22 -121 V
0 115 V
-21 -115 V
0 110 V
-19 -110 V
0 105 V
-19 -105 V
0 100 V
-18 -100 V
0 96 V
-18 -96 V
0 91 V
-16 -91 V
0 87 V
-16 -87 V
0 84 V
-15 -84 V
0 80 V
-14 -80 V
0 77 V
-14 -77 V
0 73 V
-13 -73 V
0 70 V
-13 -70 V
0 67 V
-12 -67 V
0 64 V
-12 -64 V
0 62 V
-11 -62 V
0 59 V
-10 -59 V
0 57 V
-11 -57 V
0 55 V
-10 -55 V
0 52 V
-9 -52 V
0 50 V
-9 -50 V
0 48 V
-9 -48 V
0 46 V
-8 -46 V
0 44 V
-8 -44 V
0 43 V
-8 -43 V
0 41 V
-7 -41 V
0 39 V
-7 -39 V
0 38 V
-7 -38 V
stroke 1650 1573 M
0 36 V
-7 -36 V
0 35 V
-6 -35 V
0 34 V
-6 -34 V
0 32 V
-6 -32 V
0 31 V
-6 -31 V
0 30 V
-5 -30 V
0 29 V
-6 -29 V
0 28 V
-5 -28 V
0 27 V
-5 -27 V
0 26 V
-4 -26 V
0 25 V
-5 -25 V
0 24 V
-4 -24 V
0 23 V
-4 -23 V
0 22 V
-4 -22 V
0 21 V
-4 -21 V
0 20 V
-4 -20 V
0 20 V
-4 -20 V
0 19 V
-3 -19 V
0 18 V
-3 -18 V
0 18 V
-4 -18 V
0 17 V
-3 -17 V
0 16 V
-3 -16 V
0 16 V
-3 -16 V
0 15 V
-2 -15 V
0 15 V
-3 -15 V
0 14 V
-3 -14 V
0 14 V
-2 -14 V
0 13 V
-3 -13 V
0 13 V
-2 -13 V
0 12 V
-2 -12 V
0 12 V
-2 -12 V
0 11 V
-2 -11 V
0 11 V
-2 -11 V
0 10 V
-2 -10 V
0 10 V
-2 -10 V
0 10 V
-2 -10 V
0 9 V
-2 -9 V
0 9 V
-1 -9 V
0 9 V
-2 -9 V
0 8 V
-2 -8 V
0 8 V
-1 -8 V
0 8 V
-2 -8 V
0 7 V
-1 -7 V
0 7 V
-1 -7 V
0 7 V
-2 -7 V
0 7 V
-1 -7 V
0 6 V
-1 -6 V
0 6 V
-1 -6 V
0 6 V
-2 -6 V
0 6 V
-1 -6 V
0 6 V
-1 -6 V
0 5 V
-1 -5 V
stroke 1495 1573 M
0 5 V
-1 -5 V
0 5 V
-1 -5 V
0 5 V
-1 -5 V
0 5 V
0 -5 V
0 4 V
-1 -4 V
0 4 V
-1 -4 V
0 4 V
-1 -4 V
0 4 V
-1 -4 V
0 4 V
0 -4 V
0 4 V
-1 -4 V
0 3 V
-1 -3 V
0 3 V
-1 -3 V
0 3 V
0 -3 V
0 3 V
-1 -3 V
0 3 V
0 -3 V
0 3 V
-1 -3 V
0 3 V
-1 -3 V
0 3 V
0 -3 V
0 3 V
-1 -3 V
0 2 V
0 -2 V
0 2 V
-1 -2 V
0 2 V
0 -2 V
0 2 V
-1 -2 V
0 2 V
0 -2 V
0 2 V
0 -2 V
0 2 V
-1 -2 V
0 2 V
0 -2 V
0 2 V
-1 -2 V
0 2 V
0 -2 V
0 2 V
0 -2 V
0 2 V
-1 -2 V
0 1 V
0 -1 V
0 1 V
0 -1 V
0 1 V
-1 -1 V
0 1 V
0 -1 V
0 1 V
0 -1 V
0 1 V
-1 -1 V
0 1 V
0 -1 V
0 1 V
0 -1 V
0 1 V
0 -1 V
0 1 V
-1 -1 V
0 1 V
0 -1 V
0 1 V
0 -1 V
0 1 V
0 -1 V
0 1 V
-1 -1 V
0 1 V
0 -1 V
0 1 V
0 -1 V
0 1 V
0 -1 V
0 1 V
0 -1 V
0 1 V
-1 -1 V
0 1 V
0 -1 V
0 1 V
0 -1 V
stroke 1471 1573 M
0 1 V
0 -1 V
-1 0 V
-1 0 V
-1 0 V
-1 0 V
-1 0 V
1.000 UP
stroke
LTb
LCb setrgbcolor
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
